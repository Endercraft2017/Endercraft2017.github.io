.dot,.log,.open-parenthesis,.close-parenthesis,.open-bracket.close-bracket,.dollar,.exclamation,#c,#o1,#n,#s,#o2,#l,#e, .name-input


/* Initial position */
.open-bracket{
    transform: translate(200px, 430px) scale(2);
}

.close-bracket{
    transform: translate(600px, 430px) scale(2);
}

.log{
    transform: translate(1200px, 580px) scale(3) rotate(180deg);
}

.hello{
    transform: translate(4px, 105px) scale(0.5) rotate(-25deg);
}

.open-parenthesis{
    transform: translate(1130px, 600px) scale(2.7) rotate(-90deg);
}

.close-parenthesis{
    transform: translate(402px, 330px) scale(1.4) rotate(90deg);
}

.exclamation{
    transform: translate(640px, 310px) scale(3) rotate(180deg);
}

.dollar{
    transform: translate(724px, 180px) scale(2);
}
/* Initial position */


/* Middle position */
#c{
    transform: translate(calc(-800px + 20vw),880px) scale(2) rotate(50deg);
}
#o1{
    transform: translate(calc(-505px + 20vw),880px) scale(0.8);
}
#n{
    transform: translate(calc(-420px + 20vw),1060px) scale(1.8) rotate(20deg);
}
#s{
    transform: translate(calc(-690px + 20vw),890px) scale(1) rotate(-20deg);
}
#o2{
    transform: translate(calc(-205px + 20vw),985px) scale(4) rotate(-30deg);
}
#l{
    transform: translate(calc(220px + 20vw),1055px) scale(1.5) rotate(45deg);
}
#e{
    transform: translate(calc(65px + 20vw),880px) scale(0.5) rotate(-60deg);
}
.dot{
    transform: translate(calc(1055px + 20vw),1195px) scale(7);
}
.log{
    transform: translate(calc(840px + 20vw),865px) scale(2) rotate(30deg);
}
.hello{
    transform: translate(calc(-500px + 20vw),1255px) scale(5) rotate(50deg);
}
.dollar{
    transform: translate(calc(450px + 20vw),1000px) scale(4) rotate(-45deg);
}
.open-bracket{
    transform: translate(calc(15px + 20vw),950px) scale(2) rotate(-30deg);
}
.name-input{
    transform: translate(calc(-780px + 20vw),720px) scale(0.8);
}
.close-bracket{
    transform: translate(calc(620px + 20vw),850px) scale(3) rotate(-30deg);
}
.open-parenthesis{
    transform: translate(calc(200px + 20vw),980px) scale(2) rotate(30deg);
}
.close-parenthesis{
    transform: translate(calc(575px + 20vw),1400px) scale(5) rotate(30deg);
}
.exclamation{
    transform: translate(calc(40px + 20vw),800px) scale(4) rotate(50deg);
}
/* Middle position */


/* Final position */
#c{
    transform: translate(calc(-500px + 20vw),1680px) scale(1);
}
#o1{
    transform: translate(calc(-325px + 20vw),1580px) scale(1);
}
#n{
    transform: translate(calc(-220px + 20vw),1485px) scale(1);
}
#s{
    transform: translate(calc(-584px + 20vw),1580px) scale(1);
}
#o2{
    transform: translate(calc(-205px + 20vw),1485px) scale(1);
}
#l{
    transform: translate(calc(-405px + 20vw),1485px) scale(1);
}
#e{
    transform: translate(calc(-365px + 20vw),1680px) scale(1);
}
.dot{
    transform: translate(calc(305px + 20vw),1795px) scale(0.7);
}
.log{
    transform: translate(calc(340px + 20vw),1765px) scale(2);
}
.hello{
    transform: translate(calc(60px + 20vw),1855px) scale(2);
}
.dollar{
    transform: translate(calc(270px + 20vw),1850px) scale(2);
}
.open-bracket{
    transform: translate(calc(315px + 20vw),1850px) scale(2);
}
.name-input{
    transform: translate(calc(80px + 20vw),1420px) scale(0.8);
}
.close-bracket{
    transform: translate(calc(520px + 20vw),1850px) scale(2);
}
.open-parenthesis{
    transform: translate(calc(25px + 20vw),1850px) scale(2);
}
.close-parenthesis{
    transform: translate(calc(575px + 20vw),1850px) scale(2);
}
.exclamation{
    transform: translate(calc(550px + 20vw),1855px) scale(2);
}
/* Final position */













I want to make an animation based on the scroll value, where when the scroll is at the hello-world section that will be the 100% of the animation, also the 0% is about 50px from the top when the scroll begins.

The animation will only apply for screen width with morethan 900px.

The animation is just a transform with a set points which I will provide.

The elements from the animation will have a z-index of 1 when the animations does not yet start and will have a z-index of -1 during the animation. and once the animation ends they will then regain their z-index of 1.

Once they reached 100% they will stay there until the user scroll back up again thereby reversing their animation, but they will only start only if the user scroll past their 100% mark on the way back.

These are their points where it is categorized as their initial position, their 50% position and their 100% position. Notice that the #c,#01 and the others does not have an initial postion, because their transform(0,0) will serve as their initial position, rotation and scale.


/* Initial position */
.open-bracket{
    transform: translate(200px, 430px) scale(2);
}

.close-bracket{
    transform: translate(600px, 430px) scale(2);
}

.log{
    transform: translate(1200px, 580px) scale(3) rotate(180deg);
}

.hello{
    transform: translate(4px, 105px) scale(0.5) rotate(-25deg);
}

.open-parenthesis{
    transform: translate(1130px, 600px) scale(2.7) rotate(-90deg);
}

.close-parenthesis{
    transform: translate(402px, 330px) scale(1.4) rotate(90deg);
}

.exclamation{
    transform: translate(640px, 310px) scale(3) rotate(180deg);
}

.dollar{
    transform: translate(724px, 180px) scale(2);
}
/* Initial position */


/* Middle position */
#c{
    transform: translate(calc(-800px + 20vw),880px) scale(2) rotate(50deg);
}
#o1{
    transform: translate(calc(-505px + 20vw),880px) scale(0.8);
}
#n{
    transform: translate(calc(-420px + 20vw),1060px) scale(1.8) rotate(20deg);
}
#s{
    transform: translate(calc(-690px + 20vw),890px) scale(1) rotate(-20deg);
}
#o2{
    transform: translate(calc(-205px + 20vw),985px) scale(4) rotate(-30deg);
}
#l{
    transform: translate(calc(220px + 20vw),1055px) scale(1.5) rotate(45deg);
}
#e{
    transform: translate(calc(65px + 20vw),880px) scale(0.5) rotate(-60deg);
}
.dot{
    transform: translate(calc(1055px + 20vw),1195px) scale(7);
}
.log{
    transform: translate(calc(840px + 20vw),865px) scale(2) rotate(30deg);
}
.hello{
    transform: translate(calc(-500px + 20vw),1255px) scale(5) rotate(50deg);
}
.dollar{
    transform: translate(calc(450px + 20vw),1000px) scale(4) rotate(-45deg);
}
.open-bracket{
    transform: translate(calc(15px + 20vw),950px) scale(2) rotate(-30deg);
}
.name-input{
    transform: translate(calc(-780px + 20vw),720px) scale(0.8);
}
.close-bracket{
    transform: translate(calc(620px + 20vw),850px) scale(3) rotate(-30deg);
}
.open-parenthesis{
    transform: translate(calc(200px + 20vw),980px) scale(2) rotate(30deg);
}
.close-parenthesis{
    transform: translate(calc(575px + 20vw),1400px) scale(5) rotate(30deg);
}
.exclamation{
    transform: translate(calc(40px + 20vw),800px) scale(4) rotate(50deg);
}
/* Middle position */


/* Final position */
#c{
    transform: translate(calc(-500px + 20vw),1680px) scale(1);
}
#o1{
    transform: translate(calc(-325px + 20vw),1580px) scale(1);
}
#n{
    transform: translate(calc(-220px + 20vw),1485px) scale(1);
}
#s{
    transform: translate(calc(-584px + 20vw),1580px) scale(1);
}
#o2{
    transform: translate(calc(-205px + 20vw),1485px) scale(1);
}
#l{
    transform: translate(calc(-405px + 20vw),1485px) scale(1);
}
#e{
    transform: translate(calc(-365px + 20vw),1680px) scale(1);
}
.dot{
    transform: translate(calc(305px + 20vw),1795px) scale(0.7);
}
.log{
    transform: translate(calc(340px + 20vw),1765px) scale(2);
}
.hello{
    transform: translate(calc(60px + 20vw),1855px) scale(2);
}
.dollar{
    transform: translate(calc(270px + 20vw),1850px) scale(2);
}
.open-bracket{
    transform: translate(calc(315px + 20vw),1850px) scale(2);
}
.name-input{
    transform: translate(calc(80px + 20vw),1420px) scale(0.8);
}
.close-bracket{
    transform: translate(calc(520px + 20vw),1850px) scale(2);
}
.open-parenthesis{
    transform: translate(calc(25px + 20vw),1850px) scale(2);
}
.close-parenthesis{
    transform: translate(calc(575px + 20vw),1850px) scale(2);
}
.exclamation{
    transform: translate(calc(550px + 20vw),1855px) scale(2);
}
/* Final position */